<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTNGUARDAR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>